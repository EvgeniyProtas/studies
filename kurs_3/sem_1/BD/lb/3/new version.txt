create database if not exists tradeorderedofgoods;
use trade;
DROP TABLE IF EXISTS `employees`;
CREATE TABLE `employees` (
	EmployeeID INT NOT NULL AUTO_INCREMENT,
	
	FullName VARCHAR(50) NOT NULL,
	Post VARCHAR(20) NOT NULL,
	NumberOfPhone VARCHAR(15) NOT NULL, 
	PRIMARY KEY (EmployeeID)
);
DROP TABLE IF EXISTS `organizations`;
CREATE TABLE `organizations` (
	OrganizationID INT NOT NULL AUTO_INCREMENT,
	
	UNP INT NOT NULL,
	Name VARCHAR(30) NOT NULL,
	Director VARCHAR(30) NOT NULL,
	NumberOfPhone VARCHAR(15) NOT NULL,
	JurAdress VARCHAR(50) NOT NULL, 
	PRIMARY KEY (OrganizationID)
);
DROP TABLE IF EXISTS `StateOfOrder`;
CREATE TABLE `StateOfOrder` (
	StateOfID INT NOT NULL AUTO_INCREMENT,
	
	StateOf VARCHAR(50) NOT NULL, 
	PRIMARY KEY (StateOfID)
);
DROP TABLE IF EXISTS `clients`;
CREATE TABLE `clients` (
	ManagerOfClientID INT NOT NULL AUTO_INCREMENT,
	OrganizationID INT NOT NULL,
	
	Manager VARCHAR(30) NOT NULL,
	NumberOfPhone VARCHAR(15) NOT NULL,
	Fax VARCHAR(15) NULL, 
	PRIMARY KEY (ManagerOfClientID), 
	FOREIGN KEY (`OrganizationID`) REFERENCES `organizations`(`OrganizationID`)
);
DROP TABLE IF EXISTS `Orders`;
CREATE TABLE `Orders` (
	OrderID INT NOT NULL AUTO_INCREMENT,
	ManagerOfClientID INT NOT NULL,
	EmployeeID INT NOT NULL,
	StateOfID INT NOT NULL,
	
	NumberOfWaybill INT NOT NULL,
	SumTotal FLOAT NOT NULL DEFAULT 0,
	DateOfOrder TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	DateOfShipment TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	Note VARCHAR(50) NULL, 
	PRIMARY KEY (OrderID), 
	FOREIGN KEY (`ManagerOfClientID`) REFERENCES `clients`(`ManagerOfClientID`), 
	FOREIGN KEY (`EmployeeID`) REFERENCES `employees`(`EmployeeID`), 
	FOREIGN KEY (`StateOfID`) REFERENCES `StateOfOrder`(`StateOfID`)
);
DROP TABLE IF EXISTS `providers`;
CREATE TABLE `providers` (
	ManagerOfProviderID INT NOT NULL AUTO_INCREMENT,
	ProviderID INT NOT NULL,
	
	Manager VARCHAR(30) NOT NULL,
	NumberOfPhone VARCHAR(15) NOT NULL,
	Fax VARCHAR(15) NULL, 
	PRIMARY KEY (ManagerOfProviderID), 
	FOREIGN KEY (`ProviderID`) REFERENCES `organizations`(`OrganizationID`)
);
DROP TABLE IF EXISTS `DirectoryOfGoods`;
CREATE TABLE `DirectoryOfGoods` (
	KeyOfGoods INT NOT NULL AUTO_INCREMENT,
	
	Name VARCHAR(50) NOT NULL, PRIMARY KEY (KeyOfGoods)
);
DROP TABLE IF EXISTS `stock`;
CREATE TABLE `stock` (
	StockID INT NOT NULL AUTO_INCREMENT,
	KeyOfGoods INT NOT NULL,
	
	Specification VARCHAR(50) NOT NULL,
	PriceOfSelling FLOAT NOT NULL DEFAULT 0,
	Residue INT NOT NULL,
	Place VARCHAR(8) NOT NULL, 
	PRIMARY KEY (StockID), 
	FOREIGN KEY (`KeyOfGoods`) REFERENCES `DirectoryOfGoods`(`KeyOfGoods`)
);
DROP TABLE IF EXISTS `comingStock`;
CREATE TABLE `comingStock` (
	StockID INT NOT NULL,
	DateOfDelivery TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	KeyOfProvider INT NOT NULL,
	
	NumberOfWaybill INT NOT NULL,
	Quantity INT NOT NULL DEFAULT 0,
	PriceOfOfDelivery FLOAT NOT NULL DEFAULT 0,
	Inspector VARCHAR(50) NOT NULL, 
	PRIMARY KEY (StockID, DateOfDelivery), 
	FOREIGN KEY (`StockID`) REFERENCES `stock`(`StockID`), 
	FOREIGN KEY (`KeyOfProvider`) REFERENCES `providers`(`ManagerOfProviderID`)
);
DROP TABLE IF EXISTS `OrderedOfGoods`;
CREATE TABLE `OrderedOfGoods` (
	OrderID INT NOT NULL AUTO_INCREMENT,
	StockID INT NOT NULL,
	
	PriceOfSelling FLOAT NOT NULL DEFAULT 0,
	Quantity INT NOT NULL DEFAULT 0, 
	PRIMARY KEY (OrderID, StockID), 
	FOREIGN KEY (`OrderID`) REFERENCES `Orders`(`OrderID`), 
	FOREIGN KEY (`StockID`) REFERENCES `stock`(`StockID`)
);